- name: Platform \ Platform
  commands:
    - command: go build -v -o ./bin/platform .
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ Go Basic \ Discover
  commands:
    - command: ./testbed.sh gobasic discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: gobasic builder: go/basic'
- name: Platform \ Go Basic \ Bootstrap
  commands:
    - command: ./testbed.sh gobasic bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/gobasic/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.gobasic]'
            - '    workdir = "."'
            - '    timeout = "1m0s"'
            - '    builder = "go/basic"'
            - '    cmd = "gobasic"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/gobasic/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/gobasic/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ Go Basic \ Build
  commands:
    - command: ./testbed.sh gobasic -q build
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ Go Workspace \ Discover
  commands:
    - command: ./testbed.sh gowork discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: app builder: go/workspace'
            - '  INFO  discover dir: fx builder: go/workspace'
- name: Platform \ Go Workspace \ Bootstrap
  commands:
    - command: ./testbed.sh gowork bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/gowork/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.app]'
            - '    workdir = "./app"'
            - '    timeout = "1m0s"'
            - '    builder = "go/workspace"'
            - '    cmd = "app"'
            - '  [modules.fx]'
            - '    workdir = "./fx"'
            - '    timeout = "1m0s"'
            - '    builder = "go/workspace"'
            - '    cmd = "fx"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/gowork/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/gowork/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ Go Workspace \ Build
  commands:
    - command: ./testbed.sh gowork -q build
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ PNPM Basic \ Discover
  commands:
    - command: ./testbed.sh pnpmbasic discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: pnpmbasic builder: pnpm/basic'
- name: Platform \ PNPM Basic \ Bootstrap
  commands:
    - command: ./testbed.sh pnpmbasic bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/pnpmbasic/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.pnpmbasic]'
            - '    workdir = "."'
            - '    timeout = "1m0s"'
            - '    builder = "pnpm/basic"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/pnpmbasic/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/pnpmbasic/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ PNPM Basic \ Build
  commands:
    - command: ./testbed.sh pnpmbasic -q build
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ PNPM Workspace \ Discover
  commands:
    - command: ./testbed.sh pnpmwork discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: storybook builder: pnpm/workspace'
            - '  INFO  discover dir: web builder: pnpm/workspace'
- name: Platform \ PNPM Workspace \ Bootstrap
  commands:
    - command: ./testbed.sh pnpmwork bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/pnpmwork/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.storybook]'
            - '    workdir = "./storybook"'
            - '    timeout = "1m0s"'
            - '    builder = "pnpm/workspace"'
            - '  [modules.web]'
            - '    workdir = "./web"'
            - '    timeout = "1m0s"'
            - '    builder = "pnpm/workspace"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/pnpmwork/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/pnpmwork/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ PNPM Workspace \ Build
  commands:
    - command: ./testbed.sh pnpmwork -q build
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ PNPM Static \ Discover
  commands:
    - command: ./testbed.sh pnpmstatic discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: pnpmstatic builder: pnpm/static'
- name: Platform \ PNPM Static \ Bootstrap
  commands:
    - command: ./testbed.sh pnpmstatic bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/pnpmstatic/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.pnpmstatic]'
            - '    workdir = "."'
            - '    timeout = "1m0s"'
            - '    builder = "pnpm/static"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/pnpmstatic/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/pnpmstatic/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ PNPM Static \ Build
  commands:
    - command: ./testbed.sh pnpmstatic -q build
      checks:
        - name: exitcode
          data:
            - "0"
- name: Platform \ PNPM Next \ Discover
  commands:
    - command: ./testbed.sh pnpmnext discover 2>&1 | sort
      checks:
        - name: stdout
          data:
            - '  INFO  discover dir: pnpmnext builder: pnpm/next'
- name: Platform \ PNPM Next \ Bootstrap
  commands:
    - command: ./testbed.sh pnpmnext bootstrap "Johnny Appleseed" "john@apple.com" "github.com/prod9/platform" "ghcr.io/prod9/platform"
      checks:
        - name: ./testbeds/pnpmnext/platform.toml
          data:
            - '-----BEGIN platform.toml-----'
            - maintainer = "Johnny Appleseed <john@apple.com>"
            - platform = "auto"
            - repository = "github.com/prod9/platform"
            - strategy = "timestamp"
            - excludes = ["*.docker", "*.local", ".dockerignore", ".git", ".github", ".gitignore", ".idea", ".svelte-kit", ".vscode", "build", "deploy", "dist", "node_modules", "platform.toml", "target"]
            - ""
            - '[modules]'
            - '  [modules.pnpmnext]'
            - '    workdir = "."'
            - '    timeout = "1m0s"'
            - '    builder = "pnpm/next"'
            - '-----END platform.toml-----'
            - ""
        - name: ./testbeds/pnpmnext/platform
          data:
            - '-----BEGIN platform-----'
            - '#!/bin/sh'
            - ""
            - PLATFORM_VERSION="v0.5.1"
            - ""
            - go run "platform.prodigy9.co@$PLATFORM_VERSION" "$@"
            - '-----END platform-----'
            - ""
        - name: ./testbeds/pnpmnext/.buildkite/*.*
          data:
            - '-----BEGIN pipeline.yaml-----'
            - '# vim: filetype=yaml'
            - 'steps:'
            - '  - name: ":mountain: Prepare OS"'
            - '    command: "apk add build-base git go"'
            - '    key: os'
            - ""
            - '  # regular builds'
            - '  - name: ":wrench: Build"'
            - '    command: "./platform build"'
            - '    if: build.tag == null'
            - '    depends_on: os'
            - ""
            - '  # publish image if git tag is present'
            - '  - name: ":wrench: Build and Publish"'
            - '    command: "./platform publish"'
            - '    if: build.tag != null && build.tag =~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - ""
            - '  # deploy if environment tag is present'
            - '  - name: ":rocket: Build and Deploy"'
            - '    command: "./platform deploy --no-tag $$BUILDKITE_TAG"'
            - '    if: build.tag != null && build.tag !~ /^v[0-9]+.*/'
            - '    depends_on: os'
            - '-----END pipeline.yaml-----'
            - ""
- name: Platform \ PNPM Next \ Build
  commands:
    - command: ./testbed.sh pnpmnext -q build
      checks:
        - name: exitcode
          data:
            - "0"